<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kaituo.pms.dao.IntegralMapper" >
  <resultMap id="BaseResultMap" type="com.kaituo.pms.bean.Integral" >
    <constructor >
      <idArg column="integral_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="integral_startnum" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="integral_changeStr" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="integral_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="integral_changeInt" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="integral_operator" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="integral_endnum" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    integral_id, user_id, integral_startnum, integral_changeStr, integral_time, integral_changeInt, 
    integral_operator, integral_endnum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kaituo.pms.bean.IntegralExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from p_integral
    where integral_id = #{integralId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from p_integral
    where integral_id = #{integralId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaituo.pms.bean.IntegralExample" >
    delete from p_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaituo.pms.bean.Integral" >
    insert into p_integral (integral_id, user_id, integral_startnum, 
      integral_changeStr, integral_time, integral_changeInt, 
      integral_operator, integral_endnum)
    values (#{integralId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{integralStartnum,jdbcType=INTEGER}, 
      #{integralChangestr,jdbcType=VARCHAR}, #{integralTime,jdbcType=TIMESTAMP}, #{integralChangeint,jdbcType=INTEGER}, 
      #{integralOperator,jdbcType=INTEGER}, #{integralEndnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaituo.pms.bean.Integral" >
    insert into p_integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="integralId != null" >
        integral_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="integralStartnum != null" >
        integral_startnum,
      </if>
      <if test="integralChangestr != null" >
        integral_changeStr,
      </if>
      <if test="integralTime != null" >
        integral_time,
      </if>
      <if test="integralChangeint != null" >
        integral_changeInt,
      </if>
      <if test="integralOperator != null" >
        integral_operator,
      </if>
      <if test="integralEndnum != null" >
        integral_endnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="integralId != null" >
        #{integralId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="integralStartnum != null" >
        #{integralStartnum,jdbcType=INTEGER},
      </if>
      <if test="integralChangestr != null" >
        #{integralChangestr,jdbcType=VARCHAR},
      </if>
      <if test="integralTime != null" >
        #{integralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integralChangeint != null" >
        #{integralChangeint,jdbcType=INTEGER},
      </if>
      <if test="integralOperator != null" >
        #{integralOperator,jdbcType=INTEGER},
      </if>
      <if test="integralEndnum != null" >
        #{integralEndnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaituo.pms.bean.IntegralExample" resultType="java.lang.Integer" >
    select count(*) from p_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update p_integral
    <set >
      <if test="record.integralId != null" >
        integral_id = #{record.integralId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.integralStartnum != null" >
        integral_startnum = #{record.integralStartnum,jdbcType=INTEGER},
      </if>
      <if test="record.integralChangestr != null" >
        integral_changeStr = #{record.integralChangestr,jdbcType=VARCHAR},
      </if>
      <if test="record.integralTime != null" >
        integral_time = #{record.integralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.integralChangeint != null" >
        integral_changeInt = #{record.integralChangeint,jdbcType=INTEGER},
      </if>
      <if test="record.integralOperator != null" >
        integral_operator = #{record.integralOperator,jdbcType=INTEGER},
      </if>
      <if test="record.integralEndnum != null" >
        integral_endnum = #{record.integralEndnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update p_integral
    set integral_id = #{record.integralId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      integral_startnum = #{record.integralStartnum,jdbcType=INTEGER},
      integral_changeStr = #{record.integralChangestr,jdbcType=VARCHAR},
      integral_time = #{record.integralTime,jdbcType=TIMESTAMP},
      integral_changeInt = #{record.integralChangeint,jdbcType=INTEGER},
      integral_operator = #{record.integralOperator,jdbcType=INTEGER},
      integral_endnum = #{record.integralEndnum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaituo.pms.bean.Integral" >
    update p_integral
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="integralStartnum != null" >
        integral_startnum = #{integralStartnum,jdbcType=INTEGER},
      </if>
      <if test="integralChangestr != null" >
        integral_changeStr = #{integralChangestr,jdbcType=VARCHAR},
      </if>
      <if test="integralTime != null" >
        integral_time = #{integralTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integralChangeint != null" >
        integral_changeInt = #{integralChangeint,jdbcType=INTEGER},
      </if>
      <if test="integralOperator != null" >
        integral_operator = #{integralOperator,jdbcType=INTEGER},
      </if>
      <if test="integralEndnum != null" >
        integral_endnum = #{integralEndnum,jdbcType=INTEGER},
      </if>
    </set>
    where integral_id = #{integralId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaituo.pms.bean.Integral" >
    update p_integral
    set user_id = #{userId,jdbcType=INTEGER},
      integral_startnum = #{integralStartnum,jdbcType=INTEGER},
      integral_changeStr = #{integralChangestr,jdbcType=VARCHAR},
      integral_time = #{integralTime,jdbcType=TIMESTAMP},
      integral_changeInt = #{integralChangeint,jdbcType=INTEGER},
      integral_operator = #{integralOperator,jdbcType=INTEGER},
      integral_endnum = #{integralEndnum,jdbcType=INTEGER}
    where integral_id = #{integralId,jdbcType=INTEGER}
  </update>
</mapper>