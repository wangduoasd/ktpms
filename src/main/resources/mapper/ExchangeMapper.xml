<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kaituo.pms.dao.ExchangeMapper" >
  <resultMap id="BaseResultMap" type="com.kaituo.pms.bean.Exchange" >
    <constructor >
      <idArg column="exchange_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="prize_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exchange_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exchange_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="exchange_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="MyResultMap" type="com.kaituo.pms.bean.Exchange" >
    <constructor >
      <arg column="exchange_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exchange_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exchange_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="exchange_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="prize_image" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="prize_name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="MyResultMap2" type="com.kaituo.pms.bean.Exchange" >
    <constructor >
      <arg column="exchange_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="exchange_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exchange_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="exchange_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="prize_image" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="prize_name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    exchange_id, prize_id, user_id, exchange_count, exchange_time, exchange_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kaituo.pms.bean.ExchangeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from p_exchange
    where exchange_id = #{exchangeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from p_exchange
    where exchange_id = #{exchangeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaituo.pms.bean.ExchangeExample" >
    delete from p_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaituo.pms.bean.Exchange" >
    insert into p_exchange (exchange_id, prize_id, user_id, 
      exchange_count, exchange_time, exchange_status
      )
    values (#{exchangeId,jdbcType=INTEGER}, #{prizeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{exchangeCount,jdbcType=INTEGER}, #{exchangeTime,jdbcType=TIMESTAMP}, #{exchangeStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaituo.pms.bean.Exchange" >
    insert into p_exchange
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exchangeId != null" >
        exchange_id,
      </if>
      <if test="prizeId != null" >
        prize_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="exchangeCount != null" >
        exchange_count,
      </if>
      <if test="exchangeTime != null" >
        exchange_time,
      </if>
      <if test="exchangeStatus != null" >
        exchange_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exchangeId != null" >
        #{exchangeId,jdbcType=INTEGER},
      </if>
      <if test="prizeId != null" >
        #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="exchangeCount != null" >
        #{exchangeCount,jdbcType=INTEGER},
      </if>
      <if test="exchangeTime != null" >
        #{exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exchangeStatus != null" >
        #{exchangeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaituo.pms.bean.ExchangeExample" resultType="java.lang.Integer" >
    select count(*) from p_exchange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update p_exchange
    <set >
      <if test="record.exchangeId != null" >
        exchange_id = #{record.exchangeId,jdbcType=INTEGER},
      </if>
      <if test="record.prizeId != null" >
        prize_id = #{record.prizeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeCount != null" >
        exchange_count = #{record.exchangeCount,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeTime != null" >
        exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exchangeStatus != null" >
        exchange_status = #{record.exchangeStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update p_exchange
    set exchange_id = #{record.exchangeId,jdbcType=INTEGER},
      prize_id = #{record.prizeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      exchange_count = #{record.exchangeCount,jdbcType=INTEGER},
      exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      exchange_status = #{record.exchangeStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaituo.pms.bean.Exchange" >
    update p_exchange
    <set >
      <if test="prizeId != null" >
        prize_id = #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="exchangeCount != null" >
        exchange_count = #{exchangeCount,jdbcType=INTEGER},
      </if>
      <if test="exchangeTime != null" >
        exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exchangeStatus != null" >
        exchange_status = #{exchangeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where exchange_id = #{exchangeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaituo.pms.bean.Exchange" >
    update p_exchange
    set prize_id = #{prizeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      exchange_count = #{exchangeCount,jdbcType=INTEGER},
      exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      exchange_status = #{exchangeStatus,jdbcType=INTEGER}
    where exchange_id = #{exchangeId,jdbcType=INTEGER}
  </update>
  <!--findExchangeRecord-->
  <select id="findExchangeRecord" resultMap="MyResultMap" parameterType="java.lang.Integer" >
    select * from v_exchangerecord where user_id=#{userId}
  </select>
  <!--模糊查询-->
  <select id="selectBykeyWord"  resultMap="MyResultMap">
        SELECT
        *
        FROM
        v_exchangerecord
        WHERE
        prize_name LIKE concat(concat('%',#{keyWord}),'%') and user_id=#{userId}
    </select>

  <select id="getExchangeLists"  resultMap="MyResultMap">
        SELECT
        *
        FROM
        v_exchangerecord
        WHERE
        prize_name LIKE concat(concat('%',#{keyWord}),'%') and user_id=#{userId}
    </select>
</mapper>