<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="off"> <!--status=debug可以查看log4j的装配过程-->
    <Properties>  <!--指定日志打印的路径-->
        <Property name="logdir">${catalina.base}/logs</Property>
    </Properties>
    <Appenders>
        <Console name="consolePrint" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss} [%t] %-5level %logger{36} - %msg%n" />
        </Console>
        <!--sql-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <!--
                level	输出级别，例：level=”info”,日志级别为info或者以上(匹配的界别)
                onMatch	DENY/ACCEPT 禁止或者接受（是否接受匹配）
                onMismatch	DENY/NEUTRAL （是否接受其他高于level的级别）
            -->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--             这个都知道是输出日志的格式 -->
            <PatternLayout pattern="%highlight{%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %M() @%L - %msg%n}{FATAL=Bright Red, ERROR=Bright Magenta, WARN=Bright Yellow, INFO=Bright Green, DEBUG=Bright Cyan, TRACE=Bright White}"/>
        </Console>
        <!--         文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
        <!--         append为TRUE表示消息增加到指定文件中，false表示消息覆盖指定的文件内容，默认值是true -->
        <File name="log" fileName="${logdir}/test.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>
        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingInfoFile" fileName="${logdir}/app.log"
                     filePattern="${logdir}/hloa.%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%d{yyyy.MM.dd 'at' HH:mm:ss z} %-5level %class{36} %M() @%L - %msg%n"/>
            <SizeBasedTriggeringPolicy size="5MB"/>
        </RollingFile>

        <!-- error 日志 -->
        <RollingFile name="RollingErrorFile" fileName="${logdir}/error.log"
                     filePattern="${logdir}/error-%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{yyyy.MM.dd 'at' HH:mm:ss z} %-5level %class{36} %M() @%L - %msg%n"/>
            <Filters> <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        <SizeBasedTriggeringPolicy size="5MB"/>
        </RollingFile>

    </Appenders>
    <Loggers>
        <!-- sql——将业务dao接口填写进去,并用控制台输出即可
        这里要注意,如果将level定义为DEBUG则只会打印出SQL语句,SQL参数以及结果条数
        如果将level定义为TRACE则会打印出SQL语句,SQL参数以及结果集还有结果条数
        -->

        <logger name="com.kaituo.pms.dao" level="DEBUG" additivity="false">
            <appender-ref ref="consolePrint"/>
        </logger>
        <Root level="debug">
            <!--<appender-ref ref="ERROR" />-->
            <appender-ref ref="RollingInfoFile"/>
            <appender-ref ref="RollingErrorFile"/>
            <appender-ref ref="Console"/>
            <appender-ref ref="consolePrint" />
        </Root>
    </Loggers>
</Configuration>